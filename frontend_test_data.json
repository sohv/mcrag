{
  "python": {
    "code": "def fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n# Test the function\nprint(fibonacci(10))",
    "description": "A simple recursive Fibonacci implementation that could be optimized"
  },
  "javascript": {
    "code": "function findMax(arr) {\n    let max = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(findMax([1, 5, 3, 9, 2]));",
    "description": "Find maximum value in array - could use built-in methods"
  },
  "java": {
    "code": "public class Calculator {\n    public static int add(int a, int b) {\n        return a + b;\n    }\n    \n    public static void main(String[] args) {\n        System.out.println(add(5, 3));\n    }\n}",
    "description": "Basic calculator class that could use better error handling"
  },
  "cpp": {
    "code": "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(5) << endl;\n    return 0;\n}",
    "description": "Recursive factorial that could benefit from iterative approach"
  }
}